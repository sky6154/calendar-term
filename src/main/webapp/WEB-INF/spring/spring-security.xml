<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/security
						http://www.springframework.org/schema/security/spring-security-3.2.xsd">
 
    <!-- enable use-expressions -->
    
 
	<http auto-config="true" use-expressions="true">
 		<intercept-url pattern="/events/my" access="hasRole('ROLE_ADMIN') or hasRole('ROLE_USER')" />
 		<intercept-url pattern="/events/createEvent" access="hasRole('ROLE_ADMIN') or hasRole('ROLE_USER')" />
 		<!-- access denied page -->
		<access-denied-handler error-page="/403" />
 
		<form-login 
		    login-page="/users/signin" 
		    default-target-url="/" 
			authentication-failure-url="/users/signin?error" 
			username-parameter="id"
			password-parameter="password" />
			
		<logout logout-success-url="/users/signin?logout" />
	</http>
 
	<!-- Select users and user_roles from database -->
	<authentication-manager>
	  <authentication-provider>
		<jdbc-user-service data-source-ref="dataSource"
		  users-by-username-query=
		    "select user_id, password, true from calendar_users where user_id=?"
		  authorities-by-username-query=
		    "select u.user_id, ur.role from calendar_users u, user_roles ur where u.user_id = ? and ur.user_id = u.user_id" />
	  </authentication-provider>
	</authentication-manager>
</beans:beans>